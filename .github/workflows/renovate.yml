---
name: 'Renovate'
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      repoCache:
        description: 'Reset or disable the cache?'
        type: 'choice'
        default: 'enabled'
        options:
          - 'enabled'
          - 'disabled'
          - 'reset'

  schedule:
    - cron: '* */3 * * *'

# Adding these as env variables makes it easy to re-use them in different steps and in bash.
env:
  cache_archive: 'renovate_cache.tar.gz'
  # This is the dir renovate provides
  # If we set our own directory via cacheDir, we can run into permissions issues.
  # It is also possible to cache a higher level of the directory, but it has minimal benefit. While renovate execution
  # time gets faster, it also takes longer to upload the cache as it grows bigger.
  cache_dir: '/tmp/renovate/cache/renovate/repository'
  # This can be manually changed to bust the cache if neccessary.
  cache_key: 'renovate-cache'

jobs:
  renovate:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - uses: 'dawidd6/action-download-artifact@v5'
        if: "github.event.inputs.repoCache != 'disabled'"
        continue-on-error: true
        with:
          name: '${{ env.cache_key }}'
          path: 'cache-download'

      - name: 'Extract Renovate cache to improve performance'
        run: |
          set -x
          # Skip if no cache is set, such as the first time it runs.
          if [ ! -d cache-download ] ; then
            echo "No cache found."
            exit 0
          fi

          # Make sure the directory exists, and extract it there. Note that it's nested in the download directory.
          mkdir -p "${cache_dir}"
          tar -xzf "cache-download/${cache_archive}" -C "${cache_dir}"

          # Unfortunately, the permissions expected within renovate's docker container
          # are different than the ones given after the cache is restored. We have to
          # change ownership to solve this. We also need to have correct permissions in
          # the entire /tmp/renovate tree, not just the section with the repo cache.
          sudo chown -R "runneradmin:root" "/tmp/renovate/"
          ls -R "${cache_dir}"

      - name: 'Run Renovate'
        uses: 'renovatebot/github-action@v40.1.12'
        with:
          renovate-version: '37.403.0'
          configurationFile: '.github/renovate_global.js'
          token: '${{ secrets.RENOVATE_TOKEN }}'
        env:
          RENOVATE_REPOSITORY_CACHE: "${{ github.event.inputs.repoCache || 'enabled' }}"
          RENOVATE_REPOSITORIES: '${{ github.repository }}'
          LOG_LEVEL: 'debug'

      - name: 'Compress Renovate cache to improve performance'
        run: |
          ls "${cache_dir}"
          # The -C is important, as otherwise we end up extracting the files with
          # their full path, ultimately leading to a nested directory situation.
          tar -czvf "${cache_archive}" -C "${cache_dir}" .

      - uses: 'actions/upload-artifact@v4'
        if: "github.event.inputs.repoCache != 'disabled'"
        with:
          name: '${{ env.cache_key }}'
          path: '${{ env.cache_archive }}'
          # Since this is updated and restored on every run, we don't need to keep it
          # for long. Just make sure this value is large enough that multiple renovate
          # runs can happen before older cache archives are deleted.
          retention-days: 1
...
